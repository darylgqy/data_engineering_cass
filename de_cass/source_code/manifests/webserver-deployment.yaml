apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: webserver
    spec:
      containers:
        - args:
            - webserver
          command:
            - /opt/airflow/script/entrypoint.sh
          env:
            - name: AIRFLOW_WEBSERVER_SECRET_KEY
              value: this_is_a_very_secured_key
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
            - name: EXECUTOR
              value: Sequential
            - name: LOAD_EX
              value: "n"
          image: apache/airflow:2.6.0-python3.9
          livenessProbe:
            exec:
              command:
                - '[ -f /opt/airflow/airflow-webserver.pid ]'
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 30
          name: webserver
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/airflow/script/entrypoint.sh
              name: webserver-cm1
              subPath: entrypoint.sh
            - mountPath: /opt/airflow/requirements.txt
              name: webserver-cm2
              subPath: requirements.txt
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
            name: webserver-cm1
          name: webserver-cm1
        - configMap:
            items:
              - key: requirements.txt
                path: requirements.txt
            name: webserver-cm2
          name: webserver-cm2
